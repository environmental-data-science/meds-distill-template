{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"EDS 123: Optional MEDS Template","text":"Update this image by dropping your new image into the docs/assets/images folder of the project, then open the index.md &amp; change the path to point to the new image. Image: Mississippi River south of Memphis, TN, from USGS shared on Unsplash"},{"location":"#welcome-to-the-meds-mkdocs-template","title":"Welcome to the MEDS <code>mkdocs</code> template","text":"<p>Welcome to the MEDS Course Website template! This template is made with MkDocs, a a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. This method for creating a course website may make the most sense for MEDS teachers who are familiar with python, Markdown, git and GitHub (or who want to learn!). For those of you who do not want to create your website with mkdocs, but still want a course website, check out Course-in-a-Box to create a site with no prior coding experience.</p> <p>For those wanting to take the mkdocs path: this template acts as both a starting point for your site, and place to learn basics ways to customize it (different topics currently populate the different modules, which I expect teachers will replace with different weeks or lessons or topics as useful for your courses). </p>"},{"location":"#some-starting-points","title":"Some starting points:","text":"<ul> <li> <p>Follow along with the \"Getting started with the MEDS mkdocs template\" instructions to set up your own <code>mkdocs</code> website. Please reach out to Kelly for help getting your website started, and submit problems and suggestions as issues here. </p> </li> <li> <p>The \"Weekly materials\" section of this template site can be updated with your course materials, but also in this template serves the additional purpose of showing you how to customize some things on your page.</p> </li> <li> <p>See the EDS 217 Website for an example of what a customized live course site can look like using this template.</p> </li> </ul> <p>TO UPDATE THIS PAGE: Open and edit the index.md file, in the project root, to delete this placeholder text and customize with your own!</p>"},{"location":"#course-description","title":"Course description","text":"<p>NOTE: A lot of this home page information can be directly from your syllabus.</p> <p>Add your course description here.</p>"},{"location":"#teaching-team","title":"Teaching team","text":"<p>Instructor: Mike Wazowski (wazowski@monstersinc.org)</p> <ul> <li>Office: Closet 100</li> <li>Office hours: Friday 9pm - 11pm</li> </ul> <p>Teaching assistant: Boo (boo@monstersinc.org)</p> <ul> <li>Office: Boo's Room</li> <li>Office hours: Saturday 7am - 8am</li> </ul>"},{"location":"#important-links","title":"Important links","text":"<ul> <li> <p>Link to full course syllabus (here is the MEDS optional syllabus template)</p> </li> <li> <p>Link to Code of Conduct (Bren / UCSB)</p> </li> <li> <p>Link to course GitHub Classroom, other essential resources</p> </li> </ul>"},{"location":"#weekly-course-schedule","title":"Weekly course schedule","text":"<ul> <li>Lectures: MW 8am - 9:15am (Warehouse Room 1)</li> <li>Labs: Th 10am - 12pm (Warehouse Room 2)</li> </ul>"},{"location":"#learning-objectives","title":"Learning objectives","text":"<p>Condimentum id venenatis a condimentum. Ultricies mi quis hendrerit dolor magna eget est. Turpis egestas maecenas pharetra convallis. Sem nulla pharetra diam sit amet. Diam volutpat commodo sed egestas egestas fringilla. Mauris in aliquam sem fringilla ut morbi tincidunt augue interdum. Ornare massa eget egestas purus viverra accumsan in.</p> <ul> <li>Vulputate eu scelerisque felis imperdiet proin.</li> <li>Euismod nisi porta lorem mollis aliquam.</li> <li>Urna molestie at elementum eu facilisis sed odio morbi quis.</li> <li>Convallis a cras semper auctor neque. Semper quis lectus nulla at volutpat diam ut venenatis tellus.</li> </ul>"},{"location":"#course-requirements","title":"Course requirements","text":""},{"location":"#computing","title":"Computing","text":"<ul> <li> <p>Minimum device requirements</p> </li> <li> <p>Software requirements</p> </li> <li> <p>Account requirements</p> </li> </ul>"},{"location":"#textbook","title":"Textbook","text":"<ul> <li>Required textbook / information</li> </ul>"},{"location":"#other-requirements","title":"Other requirements","text":"<ul> <li>Anything else</li> <li>Important for students to know</li> </ul>"},{"location":"#tentative-topics","title":"Tentative topics","text":"Week Lecture topics Lab topics 1 Topics Topics 2 Topics Topics 3 Topics Topics 4 Topics Topics 5 Topics Topics 6 Topics Topics 7 Topics Topics 8 Topics Topics 9 Topics Topics 10 Topics Topics"},{"location":"assignments/","title":"Assignments","text":"<p>TO UPDATE THIS PAGE: Open and edit the assigments.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"assignments/#get_titlepage","title":"{{ get_title(page) }}","text":"<p>{{ get_description(page) }}</p>"},{"location":"assignments/#assignment-materials-and-dates","title":"Assignment materials and dates","text":"Assignment materials Assigned Due date A link to the repo 2021-01-01 2021-01-08 A link to the repo 2021-01-15 2021-01-23 A link to the repo 2021-02-01 2021-02-09 A link to the repo 2021-02-14 2021-02-23"},{"location":"assignments/#assignment-expectations-and-grading","title":"Assignment expectations and grading","text":"<ul> <li>This might also go on the home page &amp; in syllabus</li> <li>Or could reinforce here</li> </ul>"},{"location":"assignments/#_1","title":"Assignments","text":""},{"location":"resources/","title":"Course Resources","text":"<p>TO UPDATE THIS PAGE: Open and edit the resources.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"resources/#more-on-mkdocs","title":"More on <code>mkdocs</code>","text":"<ul> <li>Python's <code>mkdocs</code> website</li> <li>Inspiration and examples from the catalog</li> </ul>"},{"location":"topic_1/","title":"Topic 1: Add/remove a site page","text":"<p>NOTE: There are 10 toy Topic sections here, expecting that some teachers may want to have one page per week (for a 10 week course). You are encouraged to structure your course however works best for your class. All of your course information could be on a single page, or you might have a different number of topics, or organize weekly, or any other organization that works for you.</p> <p>TO UPDATE THIS PAGE: Open and edit the topic_1.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"topic_1/#add-a-site-page","title":"Add a site page","text":""},{"location":"topic_1/#the-quick-version","title":"The quick version:","text":"<ul> <li>Make a new Markdown document, save</li> <li>Add the <code>.md</code> to <code>mkdocs.yaml</code> so the page exists on the site</li> <li>Build to see updated site</li> </ul> <p>Below for a bit more detail...</p>"},{"location":"topic_1/#make-each-page-a-markdown-document","title":"Make Each Page a Markdown Document","text":"<p>To create a new page for your MkDocs site:</p> <ol> <li>Create a New Markdown File:</li> <li> <p>Within your website's <code>docs/</code> folder, create a new <code>.md</code> file. Save it in the <code>docs/</code> folder. For this example, let's say you've saved it as <code>new_page.md</code>.</p> </li> <li> <p>Add YAML Front Matter:</p> </li> <li>At the top of your <code>.md</code> file, add YAML front matter to define the page title and any other metadata you need. The YAML front matter is the section enclosed between <code>---</code> lines at the top of the file. Here's a basic example:</li> </ol> <pre><code>---\ntitle: \"Your Page Title\"\n---\n\n</code></pre> <ul> <li> <p>You can customize the <code>title</code> field to match what you want to appear in the navigation bar and the page title. You may include other optional metadata like <code>description</code> or <code>author</code> if needed.</p> </li> <li> <p>Update the Content:</p> </li> <li> <p>After the YAML front matter, add the content you want on that page. Write your content using Markdown syntax. If you're not familiar with Markdown, consider using a text editor like VSCode, which offers built-in support for Markdown files, including previews.</p> </li> <li> <p>Here\u2019s a simple Markdown example:</p> </li> </ul> <pre><code>---\ntitle: \"Your Page Title\"\n---\n\n# Welcome to New Page\n\nThis is your new page content. You can add text, images, lists, and more using Markdown syntax.\n\n## Subheading\n\nAdd more detailed information under different sections as needed.\n</code></pre> <ol> <li>Save the File:</li> <li> <p>Save the <code>.md</code> file with your changes.</p> </li> <li> <p>Preview Your Site:</p> </li> <li>Run <code>mkdocs serve</code> in your terminal to preview your site locally and ensure your new page appears correctly with the specified title.</li> </ol> <p>By following these steps, you can effectively create and manage pages for your MkDocs site, using the YAML front matter to control page titles and other metadata. This approach ensures consistency and clarity across your documentation project.</p>"},{"location":"topic_1/#add-it-to-your-navigation-bar","title":"Add it to your navigation bar","text":"<ol> <li> <p>Open the <code>mkdocs.yml</code> file in your Project</p> </li> <li> <p>Add the information to the YAML <code>nav</code> section, which will almost always be simply the file name of the markdown (md) file that will be the source for the the page on your website. <code>mkdocs</code> will determine the text in the navigation bar from the file's <code>title</code> that you set in the YAML front matter. That would be <code>new_page.md</code> for this example . So in the <code>mkdocs.yml</code> I would need to add this to the nav section: </p> </li> </ol> <pre><code>    - new_page.md\n</code></pre> <p>Note: If the new page is part of the list of Topics, you would add it within the <code>Topic</code> subsection of the nav section in the same way as above. You can, of course, even add new subsections to the nav. For example, <code>Assignments</code> could become a subsection heading instead of a markdown page, with each Assignment having its own .md file (<code>assignment_1.md</code>, <code>assignment_2.md</code>, etc...)</p> <p>Note: YAML is space &amp; indentation specific. Follow the structure that already exists in this template to avoid YAML errors.</p> <p>How is the website finding the html? By default, <code>mkdocs</code> assumes that files are stored in the <code>docs</code> folder. That means when we run the 'build' command (<code>mkdocs build</code> at the command line), our .md pages are render to HTML &amp; sent to the <code>site</code> folder. This is also important because when we deploy the site (make it live), we will want to deploy from that site folder using GitHub pages.</p> <p>Take a look at some other pages in this template (Resources, Assignments, etc.) to see the structure, &amp; give it a shot!</p>"},{"location":"topic_1/#deletedisappear-a-site-page","title":"Delete/disappear a site page","text":"<p>The safest thing to do if you don't want a page to show up is to remove it from the <code>mkdocs.yml</code> nav listings. That way, the material on the page still exists as a file in your project, but doesn't show up on the website -- don't delete a page file unless you are REALLY SURE that you're never going to want the material on that page ever again.</p>"},{"location":"topic_10/","title":"Topic 10: Inserting tables","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_10.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"topic_10/#use-a-visual-editor","title":"Use a Visual Editor","text":"<p>If you want to create a table in your Markdown from scratch that is easily editable (e.g., a table of Assignment due dates or something), it might be easiest to just make the thing manually right in your Markdown document.</p> <p>To do that, I strongly recommend using one of the visual editor options presented in Topic 5. Many have an \"Insert Table\" option, as well as tools for formatting tables.  Here's the updated text with both the Markdown code and rendered examples, along with an explanation of how <code>---</code> is used to divide header rows:</p>"},{"location":"topic_10/#other-options-for-creating-tables","title":"Other Options for Creating Tables","text":"<p>There are several ways to create and format tables in Markdown. These options can be used to create tables for your MkDocs site or any other Markdown-based platform.</p>"},{"location":"topic_10/#tutorials-for-making-tables-in-markdown","title":"Tutorials for Making Tables in Markdown","text":"<ul> <li>Markdown Guide: Tables: This guide provides a straightforward tutorial on creating tables using Markdown syntax.</li> <li>GitHub Flavored Markdown: Tables: GitHub's official documentation on how tables work in GitHub Flavored Markdown (GFM).</li> <li>CommonMark: Tables: CommonMark's tutorial on creating tables, which is compatible with many Markdown processors.</li> </ul>"},{"location":"topic_10/#basic-instructions-for-making-tables","title":"Basic Instructions for Making Tables","text":"<p>To create a simple table in Markdown, follow these steps:</p> <ol> <li>Define the Header:</li> <li>Use pipes (<code>|</code>) to separate columns in the header row.</li> <li> <p>Use <code>---</code> to divide header rows and define column alignment.</p> </li> <li> <p>Add Rows:</p> </li> <li> <p>Add additional rows by using pipes to separate column values.</p> </li> <li> <p>Align Text:</p> </li> <li>Use colons (<code>:</code>) in the separator row to align text within columns:<ul> <li><code>:---</code> for left alignment.</li> <li><code>:---:</code> for center alignment.</li> <li><code>---:</code> for right alignment.</li> </ul> </li> </ol> <p>Here's how the Markdown code looks and its rendered output:</p>"},{"location":"topic_10/#example-1-simple-table","title":"Example 1: Simple Table","text":"<p>Markdown Code:</p> <pre><code>| Header 1 | Header 2 | Header 3 |\n| -------- | -------- | -------- |\n| Row 1    | Data 1   | Data 2   |\n| Row 2    | Data 3   | Data 4   |\n</code></pre> <p>Rendered Table:</p> Header 1 Header 2 Header 3 Row 1 Data 1 Data 2 Row 2 Data 3 Data 4 <p>Explanation: - <code>---</code> is used below the header to separate it from the rest of the table and to define the column headers. It indicates the beginning of the data rows.</p>"},{"location":"topic_10/#example-2-aligned-text","title":"Example 2: Aligned Text","text":"<p>Markdown Code:</p> <pre><code>| Left Align | Center Align | Right Align |\n| :--------- | :----------: | ----------: |\n| Data       | Data         | Data        |\n| Data       | Data         | Data        |\n</code></pre> <p>Rendered Table:</p> Left Align Center Align Right Align Data Data Data Data Data Data <p>Explanation: - The colons (<code>:</code>) in the separator row indicate the text alignment for each column:   - <code>:---</code> for left-aligned text.   - <code>:---:</code> for centered text.   - <code>---:</code> for right-aligned text.</p>"},{"location":"topic_10/#additional-formatting","title":"Additional Formatting","text":"<p>If you want to enhance the appearance of your tables beyond the basic Markdown syntax, you can apply custom CSS styles in your MkDocs <code>theme.css</code> file. This allows you to style tables to better match your site's design.</p>"},{"location":"topic_2/","title":"Topic 2: Update site title and subtitle","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_2.md file, in the <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>One of the first things you'll want to do is update your site title, and description. </p> <p>Here's how:</p> <ul> <li> <p>The main title and subtitle for the home page live in the YAML of the <code>mkdocs.yml</code> file. Open it in your project, update the <code>site_name</code> and <code>site_description</code> fields in the YAML. </p> </li> <li> <p>While editing this file, you should also update the <code>site_url</code> to match the base url that the site will have on github. This will mean changing the template <code>site_url</code> from <code>https://environmental-data-science.github.io/meds-mkdocs-template/</code> to your site's url, which will be:</p> </li> </ul> <pre><code>https://&lt;your-github-username&gt;.github.io/&lt;your_site_repository&gt;/\n</code></pre> <p>Save, then build and serve your site (run <code>mkdocs serve</code>) to see the updated title. Using <code>mkdocs serve -o</code> will automatically open a new web browser window. </p> <p>Note: The <code>site_name</code> field in the <code>mkdocs.yml</code> file is also used to determine the label for the short link at the top of the page and text text at the top of your navigation menu. </p>"},{"location":"topic_3/","title":"Topic 3: Adding images","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_3.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"topic_3/#where-should-i-save-my-images","title":"Where should I save my images?","text":"<p>Drop images you want to include on your site into the existing <code>docs/assets/images</code> folder within this template repository. </p>"},{"location":"topic_3/#how-do-i-make-images-show-up-on-my-site","title":"How do I make images show up on my site?","text":"<p>There are few ways to add images in an markdown document. I recommend using the standard <code>![Description of the image](assets/images/new_image.jpg)</code>. </p> <p>For example, if there is an image saved as <code>cool_dogs.jpg</code> in the <code>docs/assets/images</code> folder, then you can add this to your markdown document by adding: </p> <pre><code>![These are cool dogs!](assets/images/cool_dogs.jpg)\n</code></pre> <p>You can also update the size of the image, add a caption, etc... by using an html <code>&lt;figure&gt;</code> tag directly inside your markdown file (<code>mkdocs</code> can parse <code>html</code> code as well as markdown!), e.g.:</p> <pre><code>&lt;figure&gt;\n    &lt;img src=\"/assets/images/cool_dogs.jpg\"  style=\"width: 50%;\"&gt;\n        &lt;figcaption&gt;\n            Check out these cool dogs!\n        &lt;/figcaption&gt;\n&lt;/figure&gt;\n</code></pre> <p>NOTE: Notice that the path to the image file in the <code>&lt;img&gt;</code> tag's <code>src=</code> has a leading <code>/</code>, whereas the markdown code does not. This is due to subtle differences in how markdown and html code are parsed in <code>mkdocs</code>. </p> <p>For example, the image <code>usgs_sat.jpeg</code> is in the <code>/docs/assets/images</code> folder of this repo. I can have it show up here by include a code chunk that looks like this: </p> <pre><code>![Mississippi River south of Memphis, TN](assets/images/usgs_sat.jpeg)\n</code></pre> <p>Which creates: </p> <p>Or, I could use:</p> <pre><code>&lt;figure&gt;\n    &lt;img src=\"/assets/images/usgs_sat.jpeg\"  style=\"width: 100%;\"&gt;\n        &lt;figcaption&gt;\n            Update this image by dropping your new image into \n            the docs/assets/images folder of the project, then open \n            the index.md &amp; change the path to point to the new image. \n            Image: Mississippi River south of Memphis, TN, \n            from USGS shared on Unsplash\n        &lt;/figcaption&gt;\n&lt;/figure&gt;\n</code></pre> <p>Which also creates:</p> Image: Mississippi River south of Memphis, TN, from USGS shared on Unsplash"},{"location":"topic_4/","title":"Topic 4: Change the theme","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_4.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>The bells and whistles of this MEDS template (colors, fonts, spacing, etc.) are customized in the <code>theme.css</code> file in your Project root. </p> <p>If you love css or want to make changes, you're encouraged to customize your site! There is minor annotation in the css file, but honestly this will probably just take quite a bit of Inspect Element to figure out what to change. </p> <p>Fonts: If you specifically want to know how to change the site fonts, see here.</p>"},{"location":"topic_5/","title":"Topic 5: Basic formatting","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_5.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>If you're familiar with markdown, use standard syntax to update font styles, add bulleted lists, subscripts/superscripts, etc. (or learn more from the Markdown cheatsheet). </p>"},{"location":"topic_5/#visual-editors","title":"Visual Editors","text":"<p>If you're not familiar with markdown and want an easier way to update formatting, there are plenty of visual editors. You can use:</p> <ol> <li> <p>Typora - A minimalist Markdown editor that provides a seamless live preview feature, allowing you to edit and see the results visually in real-time. Download Typora</p> </li> <li> <p>Mark Text - An open-source Markdown editor that focuses on speed and usability with an interface that hides Markdown formatting symbols unless you need them. Download Mark Text</p> </li> <li> <p>StackEdit - A free, open-source in-browser Markdown editor that's great for those who prefer working directly within their web browser. Use StackEdit</p> </li> <li> <p>Zettlr - A Markdown editor designed for researchers, it supports complex integrations and features like Zettelkasten and citation management. Download Zettlr</p> </li> <li> <p>Ghostwriter - A distraction-free Markdown editor for Windows and Linux, offering a clean interface and useful features like live HTML preview. Download Ghostwriter</p> </li> <li> <p>iA Writer - Known for its focus mode, which helps you concentrate on one sentence at a time, it's available for Mac, iOS, and Android. Download iA Writer</p> </li> </ol> <p>These editors simplify the process of using Markdown by providing friendly interfaces and visual previews, making them great choices for both beginners and experienced users alike.</p>"},{"location":"topic_5/#ide-visual-editors","title":"IDE Visual Editors","text":"<p>Both RStudio and Visual Studio Code (VSCode) are powerful tools that support Markdown editing with features that enhance visual editing and provide a more user-friendly experience. Here\u2019s how you can use these environments effectively for Markdown editing:</p>"},{"location":"topic_5/#rstudio","title":"RStudio","text":"<p>RStudio is particularly well-suited for Markdown editing. Here's how to use it:</p> <ol> <li>Open/Create a Markdown File:</li> <li> <p>Start RStudio and either open an existing Markdown file or create a new one by going to File &gt; New File &gt; R Markdown.</p> </li> <li> <p>Edit and Write Markdown:</p> </li> <li> <p>You can write standard Markdown for use in this template; <code>mkdocs</code> cannot parse RMarkdown documents that contain R code blocks. RStudio's editor supports syntax highlighting for Markdown and R code, making it easier to distinguish text from code (again, don't try to use R code on pages for this template).</p> </li> <li> <p>Use the RStudio Toolbar:</p> </li> <li> <p>RStudio includes a Markdown toolbar that provides buttons for common formatting options like headers, bold, italics, bullet lists, and more. This toolbar simplifies formatting without needing to remember Markdown syntax.</p> </li> <li> <p>Live Preview:</p> </li> <li>Use the Knit button (the yarn ball icon) in RStudio to compile your Markdown document into a HTML, PDF, or Word document. This action also provides a preview of how your document will look.</li> <li>For plain Markdown files, you can use the Preview button (next to the Knit button) to see a live HTML preview of your document.</li> </ol>"},{"location":"topic_5/#visual-studio-code-vscode","title":"Visual Studio Code (VSCode)","text":"<p>VSCode, a lightweight but powerful source code editor, supports Markdown editing through its built-in features and extensive extension ecosystem:</p> <ol> <li>Install Markdown Extensions:</li> <li>Open the Extensions view by clicking on the square icon on the sidebar, or pressing <code>Ctrl+Shift+X</code>.</li> <li> <p>Install extensions such as Markdown All in One by Yu Zhang for enhanced Markdown support (like table formatting, list editing, and more) and Markdown Preview Enhanced by Yiyi Wang for a powerful preview feature.</p> </li> <li> <p>Open/Create a Markdown File:</p> </li> <li> <p>Open an existing Markdown file or create a new one with a <code>.md</code> extension. VSCode recognizes the file type and enables Markdown-specific features.</p> </li> <li> <p>Edit and Preview Markdown:</p> </li> <li> <p>Write your Markdown content in the editor. With the Markdown Preview Enhanced extension, you can open a side-by-side preview by clicking on the preview icon in the top right of the editor or by pressing <code>Ctrl+K V</code>. This live preview updates as you edit the Markdown file.</p> </li> <li> <p>Use Markdown Shortcuts and Commands:</p> </li> <li> <p>VSCode supports various Markdown shortcuts and commands which can be accessed via <code>Ctrl+Shift+P</code> to open the Command Palette and typing <code>Markdown</code>. You'll find commands for styling, navigating, and managing Markdown content.</p> </li> <li> <p>Customize Your Experience:</p> </li> <li>Customize the Markdown preview styles by modifying the VSCode settings or adding custom CSS styles for the preview.</li> </ol>"},{"location":"topic_6/","title":"Topic 6: Internal & external links","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_6.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"topic_6/#linking-to-internal-parts-of-your-site","title":"Linking to internal parts of your site","text":"<p>Sometimes you'll want to have a link to another page in your website. How? Use the format <code>[text](link_to_this_page.md)</code>. </p> <p>For example, if I want to link here to the Resources page, within my .md that looks like this: </p> <pre><code>  Find more resources [here](resources.md).\n</code></pre> <p>Which, when built, looks like this: </p> <p>Find more resources here.</p>"},{"location":"topic_6/#external-links","title":"External links","text":"<p>Same thing, just add the full URL within the parentheses. For example, to link to UCSB's home page that would look like: </p> <pre><code>  Learn more about [UCSB](https://www.ucsb.edu/).\n</code></pre> <p>Which when built looks like this: </p> <p>Learn more about UCSB.</p>"},{"location":"topic_7/","title":"Topic 7: Remove tables of contents","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_7.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>In this MkDocs template, you'll notice that a Table of Contents is automatically created on pages with headings (starting with Level 2 headers as top-level items).</p> <p>To remove the automatic Table of Contents, open the <code>mkdocs.yml</code> file. In the <code>theme</code> section, adjust the <code>toc</code> settings to disable it.</p> <p>That section in <code>mkdocs.yml</code> would then look like this, and the Table of Contents won't appear:</p> <pre><code>theme:\n  name: 'material'\n  toc:\n    enabled: false\n</code></pre>"},{"location":"topic_7/#steps-to-disable-the-table-of-contents-in-mkdocs","title":"Steps to Disable the Table of Contents in MkDocs","text":"<ol> <li>Open <code>mkdocs.yml</code>:</li> <li> <p>Locate your <code>mkdocs.yml</code> configuration file in the root of your MkDocs project.</p> </li> <li> <p>Modify the Theme Section:</p> </li> <li> <p>Add or update the <code>theme</code> section to include the <code>toc</code> settings with <code>enabled: false</code>.</p> </li> <li> <p>Save Changes:</p> </li> <li> <p>Save the file to apply the changes.</p> </li> <li> <p>Rebuild Your Site:</p> </li> <li>Run <code>mkdocs serve</code> to test the changes locally and ensure the Table of Contents is no longer appearing on your pages.</li> <li>Once satisfied, deploy your site using <code>mkdocs gh-deploy</code>.</li> </ol>"},{"location":"topic_7/#removing-the-table-of-contents-for-a-single-page","title":"Removing the Table of Contents for a single page","text":"<p>If you want to remove the Table of Contents (ToC) for a specific page in MkDocs, you can do this by using the <code>md</code>-specific metadata at the top of your Markdown file. Here\u2019s how you can achieve this:</p> <ol> <li>Open the Markdown File:</li> <li> <p>Locate the Markdown file for the page where you want to disable the Table of Contents.</p> </li> <li> <p>Add Metadata to Disable ToC:</p> </li> <li>At the top of the Markdown file, add the following YAML front matter to disable the ToC for that page:</li> </ol> <pre><code>---\ntitle: Page Title\ndescription: Page description\nhide:\n  - toc\n---\n\n# Your Page Title\n\nYour content goes here...\n</code></pre> <ol> <li>Save Changes:</li> <li> <p>Save the Markdown file with the added front matter.</p> </li> <li> <p>Rebuild and Test Your Site:</p> </li> <li>Run <code>mkdocs serve</code> to view the changes locally and confirm that the ToC is not appearing on that specific page.</li> <li>Deploy your site using <code>mkdocs gh-deploy</code> once you are satisfied with the results.</li> </ol>"},{"location":"topic_7/#how-does-this-work","title":"How does this work?","text":"<ul> <li>YAML Front Matter: The YAML front matter (<code>---</code> block) is used to set page-specific options in MkDocs. The <code>hide: - toc</code> setting specifically instructs MkDocs to hide the Table of Contents for that page.</li> </ul> <p>To learn more about MkDocs YAML front matter and page-specific options, you can refer to the following resources:</p> <ol> <li> <p>MkDocs Official Documentation:    The MkDocs documentation provides a comprehensive guide on configuring your site, including YAML front matter options for individual pages. MkDocs Configuration</p> </li> <li> <p>MkDocs-Material Theme Documentation:    If you are using the MkDocs-Material theme, it offers additional options and detailed explanations of YAML front matter specific to this theme. It includes various customization options like hiding elements, setting metadata, and more. MkDocs-Material Theme</p> </li> </ol>"},{"location":"topic_8/","title":"Topic 8: Creating a dropdown list in the navigation bar","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_8.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>If you look at this MkDocs template, you'll notice that some navigation bar items link directly to a single page, while the \"Topics\" item takes you to a dropdown menu.</p>"},{"location":"topic_8/#creating-dropdown-menus","title":"Creating Dropdown Menus","text":"<p>To create a dropdown menu of pages in MkDocs:</p> <ol> <li>Create and Save Pages:</li> <li>Create and save your pages as individual Markdown (<code>.md</code>) documents. Make sure each Markdown file has a YAML front matter at the top specifying the page title, like this:</li> </ol> <pre><code>---\ntitle: \"Your Page Title\"\n---\n\n## Content of your page\n\n</code></pre> <ol> <li>Edit <code>mkdocs.yml</code>:</li> <li>Open the <code>mkdocs.yml</code> file in the root of your MkDocs project.</li> <li>In the <code>nav</code> section, create a menu with the pages by specifying only the filename. MkDocs will automatically read the page title from the YAML front matter in each Markdown file:</li> </ol> <pre><code>    nav:\n    - Home: index.md\n    - Dropdown menu:\n        - item_1.md\n        - item_2.md\n</code></pre> <ul> <li> <p>This approach allows MkDocs to dynamically populate the menu titles based on the content of each Markdown file, making it easier to manage titles directly within the pages.</p> </li> <li> <p>File Naming:</p> </li> <li> <p>Ensure that your new pages are correctly named, such as <code>item_1.md</code> and <code>item_2.md</code> (or any names you choose), to match the links specified in the <code>mkdocs.yml</code> file.</p> </li> <li> <p>Save Changes and Build the Site:</p> </li> <li>Save your changes to the <code>mkdocs.yml</code> file.</li> <li>Run <code>mkdocs serve</code> to preview your site locally and ensure the dropdown menu works as expected.</li> <li>Once you're satisfied, deploy your site using <code>mkdocs gh-deploy</code>.</li> </ul>"},{"location":"topic_9/","title":"Topic 9: Changing site fonts","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_9.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>You are welcome to use any fonts you want on your website. Here, only using Google fonts is described (there are other methods for downloading fonts and adding, not included here).</p>"},{"location":"topic_9/#fonts-are-imported-and-specified-in-themecss","title":"Fonts are Imported and Specified in <code>theme.css</code>","text":"<p>In your MkDocs project, open the <code>theme.css</code> file located in your <code>docs/assets/css</code> directory (or wherever you have your custom CSS if you have moved it).</p> <p>Near the top, you'll see some lines that look like this:</p> <pre><code>/* Import Google Fonts */\n@import url('https://fonts.googleapis.com/css2?family=Sanchez&amp;display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400&amp;display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400&amp;display=swap');\n\n</code></pre> <p>These are the import commands to get three different Google fonts (Sanchez, Nunito Sans, and Roboto Mono). You can explore many different Google fonts here.</p>"},{"location":"topic_9/#use-different-fonts","title":"Use Different Fonts","text":"<ol> <li>Find a Google Font:</li> <li> <p>Browse and select a font you like.</p> </li> <li> <p>Select Font Styles:</p> </li> <li> <p>Click on the font. To the right of the font example text, you should see an option to '+ Select this style'. Click the one(s) you want to select.</p> </li> <li> <p>Access Your Selected Styles:</p> </li> <li>This will probably bring up a side menu. If you don't see that side menu, you can access your selected styles by clicking on the top-right menu icon that is a grid with 3 squares and a plus sign - hovering reveals this is to 'View your selected families'.</li> <li>In the Use on the web section of the side menu, select the radio button for @import. It\u2019ll look like this (for the Zen Dots Google Font):</li> </ol> <pre><code>&lt;style&gt;\n@import url('https://fonts.googleapis.com/css2?family=Zen+Dots&amp;display=swap');\n&lt;/style&gt; \n</code></pre> <ol> <li>Copy the Import Line:</li> <li> <p>Copy everything between (but excluding) the <code>&lt;style&gt;</code> and <code>&lt;/style&gt;</code> tags.</p> </li> <li> <p>Paste into <code>theme.css</code>:</p> </li> <li> <p>Paste the <code>@import</code> line you've copied into the top section of your <code>theme.css</code> file near the other font imports. Add a comment so you can remember what this font is and how you are using it.</p> </li> <li> <p>Update CSS with New Fonts:</p> </li> <li> <p>Replace the existing font names in your CSS with the name you've imported. Use Find &amp; Replace All to ensure you update the font everywhere it appears in the current theme.</p> </li> <li> <p>Repeat for Additional Fonts:</p> </li> <li>Repeat the above steps for as many different fonts as you want to update in your theme.</li> </ol>"}]}
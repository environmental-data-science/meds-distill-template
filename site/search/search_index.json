{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"EDS 123: Optional MEDS Template","text":""},{"location":"#eds-123-optional-meds-template","title":"EDS 123: Optional MEDS Template","text":"<p>A minimal website skeleton and theme for MEDS course with <code>mkdocs</code></p> Update this image by dropping your new image into the docs/assets/images folder of the project, then open the index.md &amp; change the path to point to the new image. Image: Mississippi River south of Memphis, TN, from USGS shared on Unsplash"},{"location":"#welcome-to-the-meds-mkdocs-template","title":"Welcome to the MEDS <code>mkdocs</code> template","text":"<p>Welcome to the MEDS Course Website template! This template is made with MkDocs, a a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. This method for creating a course website may make the most sense for MEDS teachers who are familiar with python, Markdown, git and GitHub (or who want to learn!). For those of you who do not want to create your website with mkdocs, but still want a course website, check out Course-in-a-Box to create a site with no prior coding experience.</p> <p>For those wanting to take the mkdocs path: this template acts as both a starting point for your site, and place to learn basics ways to customize it (different topics currently populate the different modules, which I expect teachers will replace with different weeks or lessons or topics as useful for your courses). </p>"},{"location":"#some-starting-points","title":"Some starting points:","text":"<ul> <li> <p>Follow along with the \"Getting started with the MEDS mkdocs template\" instructions to set up your own <code>mkdocs</code> website. Please reach out to Kelly for help getting your website started, and submit problems and suggestions as issues here. </p> </li> <li> <p>The \"Weekly materials\" section of this template site can be updated with your course materials, but also in this template serves the additional purpose of showing you how to customize some things on your page.</p> </li> <li> <p>See the EDS 217 Website for an example of what a customized live course site can look like using this template.</p> </li> </ul> <p>TO UPDATE THIS PAGE: Open and edit the index.md file, in the project root, to delete this placeholder text and customize with your own!</p>"},{"location":"#course-description","title":"Course description","text":"<p>NOTE: A lot of this home page information can be directly from your syllabus.</p> <p>Add your course description here.</p>"},{"location":"#teaching-team","title":"Teaching team","text":"<p>Instructor: Mike Wazowski (wazowski\\@monstersinc.org)</p> <ul> <li>Office: Closet 100</li> <li>Office hours: Friday 9pm - 11pm</li> </ul> <p>Teaching assistant: Boo (boo\\@monstersinc.org)</p> <ul> <li>Office: Boo's Room</li> <li>Office hours: Saturday 7am - 8am</li> </ul>"},{"location":"#important-links","title":"Important links","text":"<ul> <li> <p>Link to full course syllabus (here is the MEDS optional syllabus template)</p> </li> <li> <p>Link to Code of Conduct (Bren / UCSB)</p> </li> <li> <p>Link to course GitHub Classroom, other essential resources</p> </li> </ul>"},{"location":"#weekly-course-schedule","title":"Weekly course schedule","text":"<ul> <li>Lectures: MW 8am - 9:15am (Warehouse Room 1)</li> <li>Labs: Th 10am - 12pm (Warehouse Room 2)</li> </ul>"},{"location":"#learning-objectives","title":"Learning objectives","text":"<p>Condimentum id venenatis a condimentum. Ultricies mi quis hendrerit dolor magna eget est. Turpis egestas maecenas pharetra convallis. Sem nulla pharetra diam sit amet. Diam volutpat commodo sed egestas egestas fringilla. Mauris in aliquam sem fringilla ut morbi tincidunt augue interdum. Ornare massa eget egestas purus viverra accumsan in.</p> <ul> <li>Vulputate eu scelerisque felis imperdiet proin.</li> <li>Euismod nisi porta lorem mollis aliquam.</li> <li>Urna molestie at elementum eu facilisis sed odio morbi quis.</li> <li>Convallis a cras semper auctor neque. Semper quis lectus nulla at volutpat diam ut venenatis tellus.</li> </ul>"},{"location":"#course-requirements","title":"Course requirements","text":""},{"location":"#computing","title":"Computing","text":"<ul> <li> <p>Minimum device requirements</p> </li> <li> <p>Software requirements</p> </li> <li> <p>Account requirements</p> </li> </ul>"},{"location":"#textbook","title":"Textbook","text":"<ul> <li>Required textbook / information</li> </ul>"},{"location":"#other-requirements","title":"Other requirements","text":"<ul> <li>Anything else</li> <li>Important for students to know</li> </ul>"},{"location":"#tentative-topics","title":"Tentative topics","text":"Week Lecture topics Lab topics 1 Topics Topics 2 Topics Topics 3 Topics Topics 4 Topics Topics 5 Topics Topics 6 Topics Topics 7 Topics Topics 8 Topics Topics 9 Topics Topics 10 Topics Topics"},{"location":"assignments/","title":"Assignments","text":"<p>TO UPDATE THIS PAGE: Open and edit the assigments.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"assignments/#assignment-materials-and-dates","title":"Assignment materials and dates","text":"Assignment materials Assigned Due date A link to the repo 2021-01-01 2021-01-08 A link to the repo 2021-01-15 2021-01-23 A link to the repo 2021-02-01 2021-02-09 A link to the repo 2021-02-14 2021-02-23"},{"location":"assignments/#assignment-expectations-and-grading","title":"Assignment expectations and grading","text":"<ul> <li>This might also go on the home page &amp; in syllabus</li> <li>Or could reinforce here</li> </ul>"},{"location":"assignments/#_1","title":"Assignments","text":""},{"location":"info/","title":"Macro Info Page","text":""},{"location":"info/#macros-plugin-environment","title":"Macros Plugin Environment","text":""},{"location":"info/#general-list","title":"General List","text":"<p>All available variables and filters within the macros plugin:</p> Variable Type Content extra dict config MkDocsConfig {'config_file_path': '/Users/kellycaylor/Documents/dev/meds-mkdocs-template/mkdocs.yml', 'site_name': 'EDS 123', 'nav': [{'Home': 'index.md'}, {'Topics': [{'Topic 1: Add a new site page': 'topic_1.md'}, {'Topic 2: Update site title &amp; subtitle': 'topic_2.md'}, {'Topic 3: Add images': 'topic_3.md'}, {'Topic 4: Change the theme': 'topic_4.md'}, {'Topic 5: Basic formatting': 'topic_5.md'}, {'Topic 6: Internal &amp; external links': 'topic_6.md'}, {'Topic 7: Remove tables of contents': 'topic_7.md'}, {'Topic 8: Add a dropdown menu from navigation bar item': 'topic_8.md'}, {'Topic 9: Change site fonts': 'topic_9.md'}, {'Topic 10: Add a table': 'topic_10.md'}]}, {'Assignments': 'assignments.md'}, {'Resources': 'resources.md'}], 'pages': None, 'exclude_docs': None, 'draft_docs': None, 'not_in_nav': None, 'site_url': 'https://environmental-data-science.github.io/meds-mkdocs-template/', 'site_description': 'MEDS Courses mkdocs template', 'site_author': None, 'theme': Theme(name='material', dirs=['/Users/kellycaylor/mambaforge/envs/meds-website/lib/python3.11/site-packages/material/templates', '/Users/kellycaylor/mambaforge/envs/meds-website/lib/python3.11/site-packages/mkdocs/templates'], static_templates={'404.html', 'sitemap.xml'}, name='material', locale=Locale('en'), language='en', direction=None, features=[], font={'text': 'Roboto', 'code': 'Roboto Mono'}, icon=None, favicon='assets/images/favicon.png'), 'docs_dir': '/Users/kellycaylor/Documents/dev/meds-mkdocs-template/docs', 'site_dir': '/Users/kellycaylor/Documents/dev/meds-mkdocs-template/site', 'copyright': None, 'google_analytics': None, 'dev_addr': _IpAddressValue(host='127.0.0.1', port=8000), 'use_directory_urls': True, 'repo_url': 'https://github.com/environmental-data-science/meds-distill-template', 'repo_name': 'GitHub', 'edit_uri_template': None, 'edit_uri': 'edit/master/docs/', 'extra_css': ['assets/css/theme.css'], 'extra_javascript': [], 'extra_templates': [], 'markdown_extensions': ['toc', 'tables', 'fenced_code', 'admonition'], 'mdx_configs': {'toc': {'permalink': True}}, 'strict': False, 'remote_branch': 'gh-pages', 'remote_name': 'origin', 'extra': {}, 'plugins': {'material/search': , 'macros': }, 'hooks': {}, 'watch': [], 'validation': {'nav': {'omitted_files': 20, 'not_found': 30, 'absolute_links': 20}, 'links': {'not_found': 30, 'absolute_links': 20, 'unrecognized_links': 20, 'anchors': 20}}} environment dict system = 'MacOs', system_version = '14.6', python_version = '3.11.9 | packaged by conda-forge |', mkdocs_version = '1.6.0', macros_plugin_version = '1.0.5', jinja2_version = '3.1.4' plugin LegacyConfig {'module_name': 'main', 'modules': [], 'render_by_default': True, 'include_dir': '', 'include_yaml': [], 'j2_block_start_string': '', 'j2_block_end_string': '', 'j2_variable_start_string': '', 'j2_variable_end_string': '', 'on_undefined': 'keep', 'on_error_fail': False, 'verbose': False} git dict status = True, date [datetime], short_commit = '8a10a24', commit = '8a10a24df16d58bf0a3541245614106f721618ad', tag = '', short_tag = '', author = 'Kelly Caylor', author_email = 'caylor@ucsb.edu', committer = 'Kelly Caylor', committer_email = 'caylor@ucsb.edu', date_ISO = 'Wed Aug 7 08:03:24 2024 -0700', message = 'updated site', raw = 'commit 8a10a24df16d58bf0a3541245614106f721618ad\\nAuthor: Kelly Caylor \\nDate:   Wed Aug 7 08:03:24 2024 -0700\\n\\n    updated site', root_dir = '/Users/kellycaylor/Documents/dev/meds-mkdocs-template' macros SuperDict context [function], macros_info [function], now [function], fix_url [function], get_metadata [function], get_title [function], get_description [function] filters dict pretty [function] filters_builtin dict abs [builtin_function_or_method], attr [function], batch [function], capitalize [function], center [function], count [builtin_function_or_method], d [function], default [function], dictsort [function], e [builtin_function_or_method], escape [builtin_function_or_method], filesizeformat [function], first [function], float [function], forceescape [function], format [function], groupby [function], indent [function], int [function], join [function], last [function], length [builtin_function_or_method], list [function], lower [function], items [function], map [function], min [function], max [function], pprint [function], random [function], reject [function], rejectattr [function], replace [function], reverse [function], round [function], safe [function], select [function], selectattr [function], slice [function], sort [function], string [builtin_function_or_method], striptags [function], sum [function], title [function], trim [function], truncate [function], unique [function], upper [function], urlencode [function], urlize [function], wordcount [function], wordwrap [function], xmlattr [function], tojson [function] navigation Navigation files Files page Page Page(title='Macro Info Page', url='/meds-mkdocs-template/info/')"},{"location":"info/#config-information","title":"Config Information","text":"<p>Standard MkDocs configuration information. Do not try to modify.</p> <p>e.g. <code>{{ config.docs_dir }}</code></p> <p>See also the MkDocs documentation on the config object.</p> Variable Type Content config_file_path str '/Users/kellycaylor/Documents/dev/meds-mkdocs-template/mkdocs.yml' site_name str 'EDS 123' nav list [{'Home': 'index.md'}, {'Topics': [{'Topic 1: Add a new site page': 'topic_1.md'}, {'Topic 2: Update site title &amp; subtitle': 'topic_2.md'}, {'Topic 3: Add images': 'topic_3.md'}, {'Topic 4: Change the theme': 'topic_4.md'}, {'Topic 5: Basic formatting': 'topic_5.md'}, {'Topic 6: Internal &amp; external links': 'topic_6.md'}, {'Topic 7: Remove tables of contents': 'topic_7.md'}, {'Topic 8: Add a dropdown menu from navigation bar item': 'topic_8.md'}, {'Topic 9: Change site fonts': 'topic_9.md'}, {'Topic 10: Add a table': 'topic_10.md'}]}, {'Assignments': 'assignments.md'}, {'Resources': 'resources.md'}] pages NoneType None exclude_docs NoneType None draft_docs NoneType None not_in_nav NoneType None site_url str 'https://environmental-data-science.github.io/meds-mkdocs-template/' site_description str 'MEDS Courses mkdocs template' site_author NoneType None theme Theme Theme(name='material', dirs=['/Users/kellycaylor/mambaforge/envs/meds-website/lib/python3.11/site-packages/material/templates', '/Users/kellycaylor/mambaforge/envs/meds-website/lib/python3.11/site-packages/mkdocs/templates'], static_templates={'404.html', 'sitemap.xml'}, name='material', locale=Locale('en'), language='en', direction=None, features=[], font={'text': 'Roboto', 'code': 'Roboto Mono'}, icon=None, favicon='assets/images/favicon.png') docs_dir str '/Users/kellycaylor/Documents/dev/meds-mkdocs-template/docs' site_dir str '/Users/kellycaylor/Documents/dev/meds-mkdocs-template/site' copyright NoneType None google_analytics NoneType None dev_addr _IpAddressValue _IpAddressValue(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str 'https://github.com/environmental-data-science/meds-distill-template' repo_name str 'GitHub' edit_uri_template NoneType None edit_uri str 'edit/master/docs/' extra_css list ['assets/css/theme.css'] extra_javascript list [] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'admonition'] mdx_configs dict toc [dict] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra LegacyConfig {} plugins PluginCollection material/search [SearchPlugin], macros [MacrosPlugin] hooks dict watch list [] validation Validation {'nav': {'omitted_files': 20, 'not_found': 30, 'absolute_links': 20}, 'links': {'not_found': 30, 'absolute_links': 20, 'unrecognized_links': 20, 'anchors': 20}}"},{"location":"info/#macros","title":"Macros","text":"<p>These macros have been defined programmatically for this environment (module or pluglets). </p> Variable Type Content context function (obj, e) <p>Default mkdocs_macro List the defined variables</p> macros_info function () <p>Test/debug function:         list useful documentation on the mkdocs_macro environment.</p> now function () <p>Get the current time (returns a datetime object).          Used alone, it provides a timestamp.         To get the year use <code>now().year</code>, for the month number          <code>now().month</code>, etc.</p> fix_url function (url, r) <p>If url is relative, fix it so that it points to the docs diretory.     This is necessary because relative links in markdown must be adapted     in html ('img/foo.png' =&gt; '../img/img.png').</p> get_metadata function (page, key, default) <p>Retrieve metadata from page front matter.</p> get_title function (page) <p>Retrieve page title from page front matter.</p> get_description function (page) <p>Retrieve page description from page front matter.</p>"},{"location":"info/#git-information","title":"Git Information","text":"<p>Information available on the last commit and the git repository containing the documentation project:</p> <p>e.g. <code>{{ git.message }}</code></p> Variable Type Content status bool True date datetime datetime.datetime(2024, 8, 7, 8, 3, 24, tzinfo=tzoffset(None, -25200)) short_commit str '8a10a24' commit str '8a10a24df16d58bf0a3541245614106f721618ad' tag str '' short_tag str '' author str 'Kelly Caylor' author_email str 'caylor@ucsb.edu' committer str 'Kelly Caylor' committer_email str 'caylor@ucsb.edu' date_ISO str 'Wed Aug 7 08:03:24 2024 -0700' message str 'updated site' raw str 'commit 8a10a24df16d58bf0a3541245614106f721618ad\\nAuthor: Kelly Caylor \\nDate:   Wed Aug 7 08:03:24 2024 -0700\\n\\n    updated site' root_dir str '/Users/kellycaylor/Documents/dev/meds-mkdocs-template'"},{"location":"info/#page-attributes","title":"Page Attributes","text":"<p>Provided by MkDocs. These attributes change for every page (the attributes shown are for this page).</p> <p>e.g. <code>{{ page.title }}</code></p> <p>See also the MkDocs documentation on the page object.</p> Variable Type Content file File src_uri = 'info.md', src_dir = '/Users/kellycaylor/Documents/dev/meds-mkdocs-template/docs', dest_dir = '/Users/kellycaylor/Documents/dev/meds-mkdocs-template/site', use_directory_urls = True, inclusion [InclusionLevel], name = 'info', dest_uri = 'info/index.html', page [Page], url = 'info/', abs_src_path = '/Users/kellycaylor/Documents/dev/meds-mkdocs-template/docs/info.md' children NoneType None previous_page NoneType None next_page NoneType None _Page__active bool False update_date str '2024-08-07' canonical_url str 'https://environmental-data-science.github.io/meds-mkdocs-template/info/' abs_url str '/meds-mkdocs-template/info/' edit_url str 'https://github.com/environmental-data-science/meds-distill-template/edit/master/docs/info.md' markdown str '{{ macros_info() }}\\n\\n' _title_from_render NoneType None content NoneType None toc list [] meta dict title = 'Macro Info Page' <p>To have all titles of all pages, use:</p> <pre><code>\n{% for page in navigation.pages %}\n- {{ page.title }}\n{% endfor %}\n\n</code></pre>"},{"location":"info/#plugin-filters","title":"Plugin Filters","text":"<p>These filters are provided as a standard by the macros plugin.</p> Variable Type Content pretty function (var_list, rows, header, e) <p>Default mkdocs_macro Prettify a dictionary or object          (used for environment documentation, or debugging).</p>"},{"location":"info/#builtin-jinja2-filters","title":"Builtin Jinja2 Filters","text":"<p>These filters are provided by Jinja2 as a standard.</p> <p>See also the Jinja2 documentation on builtin filters).</p> Variable Type Content abs builtin_function_or_method <p>Return the absolute value of the argument.</p> attr function (environment, obj, name, value) <p>Get an attribute of an object.  <code>foo|attr(\"bar\")</code> works like     <code>foo.bar</code> just that always an attribute is returned and items are not     looked up.</p> batch function (value, linecount, fill_with, tmp, item) <p>A filter that batches items. It works pretty much like <code>slice</code>     just the other way round. It returns a list of lists with the     given number of items. If you provide a second parameter this     is used to fill up missing items. See this example.</p> capitalize function (s) <p>Capitalize a value. The first character will be uppercase, all others     lowercase.</p> center function (value, width) <p>Centers the value in a field of a given width.</p> count builtin_function_or_method <p>Return the number of items in a container.</p> d function (value, default_value, boolean) <p>If the value is undefined it will return the passed default value,     otherwise the value of the variable.</p> default function (value, default_value, boolean) <p>If the value is undefined it will return the passed default value,     otherwise the value of the variable.</p> dictsort function (value, case_sensitive, by, reverse, sort_func) <p>Sort a dict and yield (key, value) pairs. Python dicts may not     be in the order you want to display them in, so sort them first.</p> e builtin_function_or_method <p>Replace the characters <code>&amp;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>'</code>, and <code>\"</code> in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML.</p> escape builtin_function_or_method <p>Replace the characters <code>&amp;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>'</code>, and <code>\"</code> in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML.</p> filesizeformat function (value, binary, bytes, base, prefixes, i, prefix, unit) <p>Format the value like a 'human-readable' file size (i.e. 13 kB,     4.1 MB, 102 Bytes, etc).  Per default decimal prefixes are used (Mega,     Giga, etc.), if the second parameter is set to <code>True</code> the binary     prefixes are used (Mebi, Gibi).</p> first function (args, kwargs, b) <p>Return the first item of a sequence.</p> float function (value, default) <p>Convert the value into a floating point number. If the     conversion doesn't work it will return <code>0.0</code>. You can     override this default using the first parameter.</p> forceescape function (value) <p>Enforce HTML escaping.  This will probably double escape variables.</p> format function (value, args, kwargs) <p>Apply the given values to a <code>printf-style</code>_ format string, like     <code>string % values</code>.</p> groupby function (args, kwargs, b) <p>Group a sequence of objects by an attribute using Python's     :func:<code>itertools.groupby</code>. The attribute can use dot notation for     nested access, like <code>\"address.city\"</code>. Unlike Python's <code>groupby</code>,     the values are sorted first so only one group is returned for each     unique value.</p> indent function (s, width, first, blank, newline, rv, lines) <p>Return a copy of the string with each line indented by 4 spaces. The     first line and blank lines are not indented by default.</p> int function (value, default, base) <p>Convert the value into an integer. If the     conversion doesn't work it will return <code>0</code>. You can     override this default using the first parameter. You     can also override the default base (10) in the second     parameter, which handles input with prefixes such as     0b, 0o and 0x for bases 2, 8 and 16 respectively.     The base is ignored for decimal numbers and non-string values.</p> join function (args, kwargs, b) <p>Return a string which is the concatenation of the strings in the     sequence. The separator between elements is an empty string per     default, you can define it with the optional parameter.</p> last function (environment, seq) <p>Return the last item of a sequence.</p> length builtin_function_or_method <p>Return the number of items in a container.</p> list function (args, kwargs, b) <p>Convert the value into a list.  If it was a string the returned list     will be a list of characters.</p> lower function (s) <p>Convert a value to lowercase.</p> items function (value) <p>Return an iterator over the <code>(key, value)</code> items of a mapping.</p> map function (args, kwargs, b) <p>Applies a filter on a sequence of objects or looks up an attribute.     This is useful when dealing with lists of objects but you are really     only interested in a certain value of it.</p> min function (environment, value, case_sensitive, attribute) <p>Return the smallest item from the sequence.</p> max function (environment, value, case_sensitive, attribute) <p>Return the largest item from the sequence.</p> pprint function (value) <p>Pretty print a variable. Useful for debugging.</p> random function (context, seq) <p>Return a random item from the sequence.</p> reject function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to each object,     and rejecting the objects with the test succeeding.</p> rejectattr function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to the specified     attribute of each object, and rejecting the objects with the test     succeeding.</p> replace function (eval_ctx, s, old, new, count) <p>Return a copy of the value with all occurrences of a substring     replaced with a new one. The first argument is the substring     that should be replaced, the second is the replacement string.     If the optional third argument <code>count</code> is given, only the first     <code>count</code> occurrences are replaced.</p> reverse function (value, rv, e) <p>Reverse the object or return an iterator that iterates over it the other     way round.</p> round function (value, precision, method, func) <p>Round the number to a given precision. The first     parameter specifies the precision (default is <code>0</code>), the     second the rounding method.</p> safe function (value) <p>Mark the value as safe which means that in an environment with automatic     escaping enabled this variable will not be escaped.</p> select function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to each object,     and only selecting the objects with the test succeeding.</p> selectattr function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to the specified     attribute of each object, and only selecting the objects with the     test succeeding.</p> slice function (args, kwargs, b) <p>Slice an iterator and return a list of lists containing     those items. Useful if you want to create a div containing     three ul tags that represent columns.</p> sort function (environment, value, reverse, case_sensitive, attribute, key_func) <p>Sort an iterable using Python's :func:<code>sorted</code>.</p> string builtin_function_or_method <p>Convert an object to a string if it isn't already. This preserves a :class:<code>Markup</code> string rather than converting it back to a basic string, so it will still be marked as safe and won't be escaped again.</p> striptags function (value) <p>Strip SGML/XML tags and replace adjacent whitespace by one space.</p> sum function (args, kwargs, b) <p>Returns the sum of a sequence of numbers plus the value of parameter     'start' (which defaults to 0).  When the sequence is empty it returns     start.</p> title function (s) <p>Return a titlecased version of the value. I.e. words will start with     uppercase letters, all remaining characters are lowercase.</p> trim function (value, chars) <p>Strip leading and trailing characters, by default whitespace.</p> truncate function (env, s, length, killwords, end, leeway, result) <p>Return a truncated copy of the string. The length is specified     with the first parameter which defaults to <code>255</code>. If the second     parameter is <code>true</code> the filter will cut the text at length. Otherwise     it will discard the last word. If the text was in fact     truncated it will append an ellipsis sign (<code>\"...\"</code>). If you want a     different ellipsis sign than <code>\"...\"</code> you can specify it using the     third parameter. Strings that only exceed the length by the tolerance     margin given in the fourth parameter will not be truncated.</p> unique function (environment, value, case_sensitive, attribute, getter, seen, item, key) <p>Returns a list of unique items from the given iterable.</p> upper function (s) <p>Convert a value to uppercase.</p> urlencode function (value, items) <p>Quote data for use in a URL path or query using UTF-8.</p> urlize function (eval_ctx, value, trim_url_limit, nofollow, target, rel, extra_schemes, policies, rel_parts, scheme, rv) <p>Convert URLs in text into clickable links.</p> wordcount function (s) <p>Count the words in that string.</p> wordwrap function (environment, s, width, break_long_words, wrapstring, break_on_hyphens) <p>Wrap a string to the given width. Existing newlines are treated     as paragraphs to be wrapped separately.</p> xmlattr function (eval_ctx, d, autospace, items, key, value, rv) <p>Create an SGML/XML attribute string based on the items in a dict.</p> tojson function (eval_ctx, value, indent, policies, dumps, kwargs) <p>Serialize an object to a string of JSON, and mark it safe to     render in HTML. This filter is only for use in HTML documents.</p>"},{"location":"resources/","title":"Course resources","text":"<pre><code>knitr::opts_chunk$set(echo = TRUE)\n</code></pre> <p>TO UPDATE THIS PAGE: Open and edit the resources.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"resources/#more-on-mkdocs","title":"More on <code>mkdocs</code>","text":"<ul> <li>Python's <code>mkdocs</code> website</li> <li>Inspiration and examples from the catalog</li> </ul>"},{"location":"topic_1/","title":"Topic 1: Add/remove a site page","text":"<p>Basic information on managing site pages</p> <p>NOTE: There are 10 toy Topic sections here, expecting that some teachers may want to have one page per week (for a 10 week course). You are encouraged to structure your course however works best for your class. All of your course information could be on a single page, or you might have a different number of topics, or organize weekly, or any other organization that works for you.</p> <p>TO UPDATE THIS PAGE: Open and edit the topic_1.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"topic_1/#add-a-site-page","title":"Add a site page","text":""},{"location":"topic_1/#the-quick-version","title":"The quick version:","text":"<ul> <li>Make a new Markdown document, save</li> <li>Add the <code>.md</code> to <code>mkdocs.yaml</code> so the page exists on the site</li> <li>Build to see updated site</li> </ul> <p>Below for a bit more detail...</p>"},{"location":"topic_1/#make-each-page-a-markdown-document","title":"Make each page a Markdown document","text":"<p>To make a new page:</p> <ol> <li> <p>Within your website <code>docs/</code> folder, create a new <code>.md</code> file. Save it in the <code>docs/</code> folder. For this example, let's say you've saved it as <code>new_page.md.</code></p> </li> <li> <p>In that .md file, remove everything but the title (which you can change) from the YAML - that's the top section of the .md, where by default it has title, author, date, etc.</p> </li> <li> <p>Update the .md to contain whatever you want to have on that page. Don't know a lot about markdown? Considering switching over to VSCode, which has built in support for .md files, including previews. </p> </li> <li> <p>Save the .md</p> </li> </ol>"},{"location":"topic_1/#add-it-to-your-navigation-bar","title":"Add it to your navigation bar","text":"<ol> <li> <p>Open the <code>mkdocs.yml</code> file in your Project</p> </li> <li> <p>Add the information to the YAML <code>nav</code> section, which will almost always be the text that you want to appear in the navigation bar, and the file name of the Markdown (md) file that will be the source for the the page on your website. That would be <code>new_page.md</code> for this example . So in the <code>mkdocs.yml</code> I would need to add this to the nav section: </p> </li> </ol> <pre><code>    - 'A New Page': new_page.md\n</code></pre> <p>Note: If the new page is part of the list of Topics, you would add it within the <code>Topic</code> subsection of the nav section in the same way as above. You can, of course, even add new subsections to the nav. For example, <code>Assignments</code> could become a subsection instead of a single page, with each Assignment having its own .md file (<code>assignment_1.md</code>, <code>assignment_2.md</code>, etc...)</p> <p>Note: YAML is space &amp; indentation specific. Follow the structure that already exists in this template to avoid YAML errors.</p> <p>How is the website finding the html? By default, <code>mkdocs</code> assumes that files are stored in the <code>docs</code> folder. That means when we run the 'build' command (<code>mkdocs build</code> at the command line), our .md pages are render to HTML &amp; sent to the <code>site</code> folder. This is also important because when we deploy the site (make it live), we will want to deploy from that site folder using GitHub pages.</p> <p>Take a look at some other pages in this template (Resources, Assignments, etc.) to see the structure, &amp; give it a shot!</p>"},{"location":"topic_1/#deletedisappear-a-site-page","title":"Delete/disappear a site page","text":"<p>The safest thing to do if you don't want a page to show up is to remove it from the <code>mkdocs.yml</code> nav listings. That way, the material on the page still exists as a file in your project, but doesn't show up on the website -- don't delete a page file unless you are REALLY SURE that you're never going to want the material on that page ever again.</p>"},{"location":"topic_10/","title":"Topic 10: Inserting tables","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_10.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"topic_10/#use-the-visual-editor","title":"Use the Visual Editor","text":"<p>If you want to create a table in your R Markdown from scratch that is easily editable (e.g., a table of Assignment due dates or something), it might be easiest to just make the thing manually right in your R Markdown document.</p> <p>To do that, I strongly recommend using the RStudio Visual Editor (in RStudio versions &gt;= 1.4), which has an easy-to-use Table maker similar to what you'd see in Word or Google Docs.</p> <ol> <li>Open the .md in which you want to add the table</li> <li>Switch over to the visual editor by clicking on the compass-looking icon in the top right of your .md screen, to the right of the 'Run' and 'Publish' buttons (hover text is \"Switch to visual markdown editor\")</li> <li>In the Visual Editor menu, click on Table, then in the dropdown Menu click 'Insert Table'...and create &amp; populate your new table like you would normally in non-markdown tools</li> </ol>"},{"location":"topic_10/#other-options","title":"Other options","text":"<p>There are a bunch of different ways to add &amp; format tables in R Markdown (see several of many options in David Keyes' post on Making Beautiful Tables in R). I think most of them are most useful when you're trying to make a finalized table with data in it, but if you really want to beautify your website tables there are options.</p>"},{"location":"topic_2/","title":"Topic 2: Update site title and subtitle","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_2.md file, in the <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>One of the first things you'll want to do is update your site title, subtitle, and the short link on the right side of the navbar. </p> <p>Here's how:</p> <ul> <li> <p>The main title and subtitle for the home page live in the YAML of the <code>mkdocs.yml</code> file. Open it in your project, update the <code>title</code> and <code>description</code> fields in the YAML, save, then build your site (run <code>mkdocs build</code> at the command line in your project root directory) to see the updated title.</p> </li> <li> <p>The label for the short link in the upper right of the page (right side of the navigation bar) is specified in the <code>mkdocs.yml</code> page. Open the <code>mkdocs.yml</code> file in your project, update the <code>site_name</code> field, save, and rebuild the site to see your update.</p> </li> </ul>"},{"location":"topic_3/","title":"Topic 3: Adding images","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_3.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"topic_3/#where-should-i-save-my-images","title":"Where should I save my images?","text":"<p>Drop images you want to include on your site into the existing <code>img</code> folder within your R Project (or make your own folder for images, set up a subfolder structure, etc.) - as long as you can easily point to them within your project. </p>"},{"location":"topic_3/#how-do-i-make-images-show-up-on-my-site","title":"How do I make images show up on my site?","text":"<p>There are a bunch of ways to add images in an R Markdown document (see more examples from the R Markdown Cookbook here). </p> <p>I recommend using <code>knitr::include_graphics(\"path_to_image\")</code>. </p> <p>For example, if there is an image saved as <code>cool_dogs.jpg</code> in the <code>img</code> folder, then you can add this to your R Markdown document by adding (within a code chunk): </p> <pre><code>\n```{r, echo = FALSE}`r ''`\n  knitr::include_graphics(\"img/cool_dogs.jpg\")\n```\n\n</code></pre> <p>You can also update the size of the image, add a caption, etc. by updating the code chunk header, e.g.:</p> <pre><code>\n```{r, echo = FALSE, out.width = \"50%\", fig.cap = \"Some cool dogs!\"}`r ''`\n  knitr::include_graphics(\"img/cool_dogs.jpg\")\n```\n\n</code></pre> <p>For example, the image <code>usgs_sat.jpeg</code> is in the <code>img</code> folder of this template. I can have it show up here by include a code chunk that looks like this: </p> <pre><code>\n```{r, echo = FALSE, out.width = \"80%\", fig.cap = \"USGS image of Mississippi River.\"}`r ''`\n  knitr::include_graphics(\"img/usgs_sat.jpeg\")\n```\n\n</code></pre> <p>Which creates: </p> <pre><code>\nknitr::include_graphics(\"img/usgs_sat.jpeg\")\n\n</code></pre>"},{"location":"topic_4/","title":"Topic 4: Change the theme","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_4.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>The bells and whistles of this MEDS template (colors, fonts, spacing, etc.) are customized in the <code>theme.css</code> file in your Project root. </p> <p>If you love css or want to make changes, you're encouraged to customize your site! There is minor annotation in the css file, but honestly this will probably just take quite a bit of Inspect Element to figure out what to change. </p> <p>Fonts: If you specifically want to know how to change the site fonts, see here.</p>"},{"location":"topic_5/","title":"Topic 5: Basic formatting","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_5.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>If you're familiar with markdown, use standard syntax to update font styles, add bulleted lists, subscripts/superscripts, etc. (or learn more from the R Markdown cheatsheet). </p> <p>If you're not familiar with markdown and want an easier way to update formatting, there is a Visual Editor in RStudio versions &gt; 1.4. It is absolutely worth it to check it out for easier formatting of text, images, tables, citations, and more. Read more about the new RStudio Visual Editor here.</p>"},{"location":"topic_6/","title":"Topic 6: Internal &amp; external links","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_6.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p>"},{"location":"topic_6/#linking-to-internal-parts-of-your-site","title":"Linking to internal parts of your site","text":"<p>Sometimes you'll want to have a link to another page in your website. How? Use the format <code>[text](link_to_this_page.md)</code>. </p> <p>For example, if I want to link here to the Resources page, within my .md that looks like this: </p> <pre><code>  Find more resources [here](resources.md).\n</code></pre> <p>Which, when built, looks like this: </p> <p>Find more resources here.</p>"},{"location":"topic_6/#external-links","title":"External links","text":"<p>Same thing, just add the full URL within the parentheses. For example, to link to UCSB's home page that would look like: </p> <pre><code>  Learn more about [UCSB](https://www.ucsb.edu/).\n</code></pre> <p>Which when built looks like this: </p> <p>Learn more about UCSB.</p>"},{"location":"topic_7/","title":"Topic 7: Remove tables of contents","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_7.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>In this template, you'll notice that a Table of Contents is automatically created on pages with headings (starting with Level 2 headers as top-level items). </p> <p>To remove the auto-table of contents, open the <code>_site.yml</code> file. In the <code>output</code> section, change the <code>toc:</code> and <code>toc_float:</code> fields to <code>false</code>. </p> <p>That section in <code>_site.yml</code> would then look like this, and the table of contents won't appear: </p> <pre><code>output:\n  distill::distill_article:\n    toc: false\n    toc_float: false\n</code></pre>"},{"location":"topic_8/","title":"Topic 8: Dropdown list from a navigation bar item","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_8.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>If you look at this template, you'll notice that some navigation bar items go directly to a single page, while the Modules item takes you to a dropdown menu. </p> <p>To create a dropdown menu of pages: </p> <ol> <li> <p>Create and save the pages as individual R Markdown documents as described here.</p> </li> <li> <p>Open the <code>_site.yml</code> file. In the <code>navbar</code> section, create a menu with the pages as linked items using a structure like this: </p> </li> </ol> <pre><code>   - text: \"Dropdown menu\"\n      menu:\n        - text: \"First dropdown item\"\n          href: item_1.html\n        - text: \"Second dropdown item\"\n          href: item_2.html\n</code></pre> <p>The example above would only work if the new pages were created as <code>item_1.md</code> and <code>item_2.md</code>, so that when the site is built the rendered <code>item_1.html</code> and <code>item_2.html</code> files exist in the <code>docs</code> output directory.</p>"},{"location":"topic_9/","title":"Topic 9: Changing site fonts","text":"<p>TO UPDATE THIS PAGE: Open and edit the topic_9.md file, in <code>docs/</code> folder, to delete this placeholder text and customize with your own!</p> <p>You are welcome to use any fonts you want on your website. Here, only using Google fonts is described (there are other methods for downloading fonts and adding, not included here). </p>"},{"location":"topic_9/#fonts-are-imported-and-specified-in-themecss","title":"Fonts are imported and specified in theme.css","text":"<p>In your Project in RStudio, open the <code>theme.css</code> file. </p> <p>Near the top, you'll see some lines that look like this: </p> <pre><code>/* Header font */\n@import url('https://fonts.googleapis.com/css2?family=Sanchez&amp;display=swap');\n\n/* Body font */\n@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400&amp;display=swap');\n\n/* Code font (Roboto Mono) */\n@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400&amp;display=swap');\n</code></pre> <p>Those are the import command to get 3 different Google fonts (Sanchez, Nunito Sans, and Roboto Mono). You can explore many different Google fonts here. </p>"},{"location":"topic_9/#use-different-fonts","title":"Use different fonts","text":"<ol> <li> <p>Find a Google Font you like.</p> </li> <li> <p>Click on the font. To the right of the font example text, you should see an option to '+ Select this style'. Click the one(s) you want to select.</p> </li> <li> <p>That will probably bring up a side menu. If you don't see that side menu, you can see your selected styles at any time by clicking on the top-right menu icon that is a grid with 3 squares and a plus sign - hovering reveals this is to 'View your selected families'. In the Use on the web section of the side menu that appears, select the radio button for @import. It'll look weird like this (for the Zen Dots Google Font):</p> </li> </ol> <pre><code>    &lt;style&gt;\n    @import url('https://fonts.googleapis.com/css2?family=Zen+Dots&amp;display=swap');\n    &lt;/style&gt; \n</code></pre> <ol> <li> <p>Copy everything BETWEEN (but excluding) the ending <code>&lt;style&gt;</code> and <code>&lt;/style&gt;</code>tags</p> </li> <li> <p>Paste the <code>@import</code> line you've copied into the top section of <code>theme.css</code> near the other fonts imported there. It is now available for use in your theme.</p> </li> <li> <p>Update the css with your new fonts, replacing the existing font names with the name you've imported. You might want to use a Find &amp; Replace All if you want to make sure you're updating a font everywhere it appears in the current theme.</p> </li> <li> <p>Repeat for as many different fonts as you want to update in your theme.</p> </li> </ol>"}]}